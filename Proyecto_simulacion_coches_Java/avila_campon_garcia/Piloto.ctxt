#BlueJ class context
comment0.target=Piloto
comment1.params=nombre\ concentracion\ escuderia
comment1.target=Piloto(java.lang.String,\ Concentracion,\ Escuderia)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Piloto,\ que\ se\ encarga\ de\ inicializar\ sus\ atributos\r\n\r\n\ @param\ nombre,\ \ nombre\ del\ piloto\r\n\ @param\ concentracion,\ concentraci\u00F3n\ del\ piloto\r\n\ @param\ escuderia,\ escuderia\ a\ la\ que\ pertenece\ el\ piloto\r\n
comment10.params=
comment10.target=java.lang.Double\ getDestreza()
comment10.text=\r\n\ Este\ m\u00E9todo\ devuelve\ la\ destreza\ del\ piloto(abstact\ method)\r\n\r\n\ @return\ destreza\r\n
comment11.params=ncircuito\ puntuacion
comment11.target=void\ setPuntuacion(java.lang.String,\ Puntuacion)
comment11.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ establecer\ la\ puntuaci\u00F3n\ del\ piloto\ en\ el\ circuito\ que\ ha\ competido,\ se\ introduce\ en\ el\r\n\ HashMap\ el\ nombre\ del\ circuito\ y\ el\ enum\ de\ puntuaci\u00F3n\ que\ tiene\ el\ tiempo\ que\ ha\ tardado\ y\ los\ puntos\ conseguidos\r\n\r\n\ @param\ ncircuito,\ circuito\ que\ ha\ corrido\ el\ piloto\r\n\ @param\ puntuacion,\ tiempo\ y\ puntos\ que\ ha\ hecho\ el\ piloto\r\n
comment12.params=ncircuito
comment12.target=java.lang.Double\ getPuntuacionCarrera(java.lang.String)
comment12.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ devolver\ los\ puntos\ que\ ha\ conseguido\ el\ pilodo\ en\ el\ circuito\ pasado\ por\ par\u00E1metros\r\n\r\n\ @param\ ncircuito,\ circuito\ que\ ha\ corrido\ el\ piloto\r\n\ @return\ los\ puntos\ que\ ha\ obtenido\ en\ el\ circuito\r\n
comment13.params=
comment13.target=java.lang.Integer\ getCarrerasRealizadas()
comment13.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ devolver\ las\ carreras\ que\ ha\ realizado\ el\ piloto\r\n\r\n\ @return\ n\u00FAmero\ de\ carreras\ realizadas\ por\ el\ piloto\r\n
comment14.params=
comment14.target=java.lang.Double\ totalPuntos()
comment14.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ devolver\ el\ total\ de\ Puntos\ que\ ha\ conseguido\ el\ piloto\ entre\ todos\ los\ circuitos\ que\ ha\ corrido\r\n\r\n\ @return\ puntos\ obtenidos\r\n
comment15.params=
comment15.target=void\ comprobarCoche()
comment15.text=\r\n\ Este\ m\u00E9todo\ comprueba\ si\ el\ piloto\ tiene\ coche\ asignado\ para\ poder\ enviarlo\ a\ la\ carrera\r\n
comment16.params=
comment16.target=void\ comprobarDescalificacion()
comment16.text=\r\n\ Este\ m\u00E9todo\ comprueba\ si\ el\ piloto\ esta\ descalificado,\ en\ caso\ de\ estarlo\ saca\ un\ mensaje\ por\ pantalla\r\n\ diciendo\ que\ el\ piloto\ esta\ descalificado\r\n
comment17.params=
comment17.target=Escuderia\ getEscuderiaPerteneciente()
comment17.text=\r\n\ Este\ m\u00E9todo\ devuelve\ la\ escuderia\ a\ la\ que\ pertenece\ el\ piloto\r\n
comment18.params=complejidad
comment18.target=java.lang.Double\ getVelocidadEsCapaz(java.lang.Double)
comment18.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ calcular\ la\ velocidad\ a\ la\ que\ es\ capaz\ de\ alcanzar\ el\ piloto\ con\ su\ coche\ asignado,\ dependiendo\r\n\ de\ la\ destreza\ del\ piloto,\ la\ velocidad\ del\ coche\ y\ la\ complejidad\ del\ circuito\r\n\r\n\ @param\ complejidad,\ complejidad\ del\ circuito\r\n\ @return\ la\ velocidad\ que\ es\ capaz\ de\ alcanzar\ el\ piloto\r\n
comment19.params=tiempo
comment19.target=java.lang.Boolean\ getFaltaDeConcentracion(java.lang.Double)
comment19.text=\r\n\ Este\ m\u00E9todo\ devuelve\ si\ el\ piloto\ tiene\ la\ concetraci\u00F3n\ suficiente\ para\ poder\ terminar\ la\ carrera\r\n\r\n\ @param\ tiempo,\ tiempo\ que\ tarda\ en\ terminar\ la\ carrera\r\n\ @return\ boolean\ false\ si\ no\ le\ falta\ la\ concentraci\u00F3n\ por\ lo\ que\ podr\u00E1\ terminar\ la\ carrera,\ y\ true\ en\ caso\ de\ que\r\n\ si\ le\ false\ concetraci\u00F3n\ y\ no\ podr\u00E1\ terminar\ la\ carrera\r\n
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ nombre\ del\ piloto\r\n\r\n\ @return\ nombre\r\n
comment20.params=
comment20.target=void\ volverAEscuderia()
comment20.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ devolver\ el\ piloto\ a\ la\ escuderia\ despu\u00E9s\ de\ terminar\ la\ carrera\r\n
comment21.params=abandonoscircuito
comment21.target=java.lang.String\ pilotoAbandona(java.lang.Integer)
comment21.text=\r\n\ Este\ m\u00E9todo\ saca\ por\ pantalla\ si\ el\ piloto\ ha\ sido\ descalificado\ del\ campeonato\ por\ haber\ superado\ el\ limite\ de\r\n\ abandonos\r\n\r\n\ @param\ abandonoscircuito,\ abandonos\ del\ piloto\r\n\ @return\ string\ con\ la\ informaci\u00F3n\ de\ la\ descalificaci\u00F3n\ del\ piloto\r\n
comment22.params=
comment22.target=java.lang.Double\ getTiempoCarreraActual()
comment22.text=\r\n\ Devulve\ el\ tiempo\ de\ la\ carrera\ actual\r\n\r\n\ @return\ tiempoCarreraActual\r\n
comment23.params=
comment23.target=java.lang.Boolean\ getTerminadaCarreraActual()
comment23.text=\r\n\ Devuelve\ boolean\ si\ ha\ el\ piloto\ podido\ terminar\ la\ carrea\ o\ no\r\n\r\n\ @return\ boolean\ terminadaCarreraActual\r\n
comment24.params=
comment24.target=void\ incAbandono()
comment24.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ incrementar\ el\ n\u00FAmero\ de\ abandonos\ del\ piloto\r\n
comment25.params=
comment25.target=java.lang.Integer\ getCarrerasTerminadas()
comment25.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ n\u00FAmero\ de\ carreras\ terminadas\ del\ piloto\r\n\r\n\ @return\ devuelve\ las\ carreras\ que\ ha\ terminado\ el\ piloto\r\n
comment26.params=circuito
comment26.target=java.lang.String\ conducirCoche(Circuito)
comment26.text=\r\n\ Este\ m\u00E9todo\ es\ el\ encargado\ de\ ejecutar\ la\ conducci\u00F3n\ del\ coche,\ sacando\ por\ pantalla\ el\ tiempo\ que\ ha\ tardado\ en\ terminar\r\n\ la\ carrera,\ si\ no\ ha\ podido\ terminar\ la\ concentrac\u00ED\u00F3n\ que\ le\ ha\ faltado\ o\ el\ combustible\ que\ le\ ha\ faltado\r\n\r\n\ @param\ circuito,\ circuito\ que\ ha\ corrido\ el\ piloto\r\n\ @return\ string\ con\ toda\ la\ informaci\u00F3n\ de\ la\ conducci\u00F3n\ del\ piloto\r\n
comment27.params=
comment27.target=java.lang.String\ GasolinaRestanteDelCoche()
comment27.text=\r\n\ Devuelve\ la\ gasolina\ restando\ del\ coche\ del\ piloto\r\n\r\n\ @return\ gasolina\ del\ coche\ del\ piloto\r\n
comment28.params=circuito
comment28.target=java.lang.String\ podio(Circuito)
comment28.text=\r\n\ Este\ m\u00E9todo\ saca\ por\ pantalla\ toda\ la\ informaci\u00F3n\ de\ los\ pilotos\ en\ cada\ circuito\ (nombre\ del\ circuito,\r\n\ puntos\ y\ tiempo\ que\ ha\ hecho\ en\ el\ circuito)\r\n\r\n\ @param\ circuito,\ circuito\ en\ el\ que\ ha\ participado\ el\ piloto\r\n\ @return\ devuelve\ un\ string\ con\ toda\ la\ informaci\u00F3n\ de\ los\ pilotos\ en\ cada\ circuito\ de\ la\ competic\u00EDon\r\n
comment29.params=
comment29.target=java.lang.String\ toString()
comment29.text=\r\n\ Este\ m\u00E9todo\ muestra\ saca\ por\ pantalla\ la\ informaci\u00F3n\ de\ los\ pilotos(abstract\ mehod)\r\n\r\n\ @return\ devuelve\ un\ string\ con\ la\ informaci\u00F3n\ de\ los\ pilotos\r\n
comment3.params=nombre_p
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ nombre\ del\ piloto\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ nombre\r\n\r\n\ @param\ nombre_p,\ nombre\ del\ piloto\ que\ queremos\ poner\ en\ el\ atributo\ nombre\r\n
comment4.params=
comment4.target=Coche\ getCoche()
comment4.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ coche\ que\ tiene\ asociado\ el\ piloto\r\n\r\n\ @return\ coche\r\n
comment5.params=cocheDefault
comment5.target=void\ setCoche(Coche)
comment5.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ coche\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ coche\r\n\r\n\ @param\ cocheDefault,\ coche\ que\ queremos\ poner\ en\ el\ atributo\ coche\r\n
comment6.params=
comment6.target=Concentracion\ getConcentracion()
comment6.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ enum\ de\ concentraci\u00F3n\ con\ su\ nombre(String)\ y\ valor(Double)\r\n\r\n\ @return\ enum\ de\ Concentraci\u00F3n\r\n
comment7.params=concentracion
comment7.target=void\ setConcentracion(Concentracion)
comment7.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ la\ concentraci\u00F3n\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ concentraci\u00F3n\r\n\r\n\ @param\ concentracion,\ concentraci\u00F3n\ del\ piloto\ que\ queremos\ poner\ en\ el\ atributo\ concentraci\u00F3n\r\n
comment8.params=
comment8.target=java.lang.Boolean\ getDescalificado()
comment8.text=\r\n\ Este\ m\u00E9todo\ devuelve\ un\ boolean\ si\ el\ piloto\ esta\ descalificado\ o\ no\r\n\r\n\ @return\ true\ si\ esta\ descalificado,\ false\ en\ caso\ de\ no\ estar\ descalificado\r\n
comment9.params=descalificado
comment9.target=void\ setDescalificado(boolean)
comment9.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ boolean\ descalificado\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ descalificado\r\n\r\n\ @param\ descalificado,\ true\ o\ false\ dependiendo\ si\ esta\ descalificado\ o\ no\ para\ establecerlo\ en\ el\ atributo\ descalificado\r\n
numComments=30
