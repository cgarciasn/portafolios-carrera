#BlueJ class context
comment0.target=Organizacion
comment1.params=o1\ o2
comment1.target=int\ compare(Escuderia,\ Escuderia)
comment1.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ comparar\ dos\ escuderias\ por\ la\ puntiaci\u00F3n\ de\ sus\ pilotos,\ en\ caso\ de\ que\ sea\ igual,se\ compara\r\n\ por\ el\ total\ de\ carreras\ terminadas\ y\ en\ caso\ de\ que\ tambi\u00E9n\ sea\ igual\ se\ comparar\u00E1\ por\ los\ nombres\ alfabeticamente\r\n\r\n\ @param\ o1,\ primera\ escuderia\ {@code\ escuderia}\ a\ comparar\r\n\ @param\ o2,\ segunda\ escuderia\ {@code\ escuderia}\ a\ comparar\r\n\ @return\ el\ valor\ {@code\ 0}\ si\ {@code\ o1\ \=\=\ o2}\r\n\ \ \ \ \ \ \ \ \ el\ valor\ mayor\ a\ {@code\ 0}\ si\ {@code\ o1>o2}\r\n\ \ \ \ \ \ \ \ \ el\ valor\ menor\ a\ {@code\ 0}\ si\ {@code\ o1<o2}\r\n
comment10.params=
comment10.target=int\ getLimiteAbandonos()
comment10.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ l\u00EDmite\ de\ abandonos\ que\ hay\r\n\r\n\ @return\ LimiteAbandonos\r\n
comment11.params=
comment11.target=int\ getLimitePilotos()
comment11.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ l\u00EDmite\ de\ pilotos\ que\ hay\r\n\r\n\ @return\ LimitePilotos\r\n
comment12.params=escuderia
comment12.target=void\ Inscripcion(Escuderia)
comment12.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ inscribir\ la\ escuderia\ pasada\ por\ par\u00E1metros\ en\ la\ organizaci\u00F3n,\ a\u00F1andi\u00E9ndola\ al\ TreeSet\ de\ Escuder\u00EDas\r\n\r\n\ @param\ escuderia,\ escuderia\ que\ se\ va\ a\ inscribir\ en\ la\ competici\u00F3n\r\n
comment13.params=circuito
comment13.target=void\ addCircuito(Circuito)
comment13.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ a\u00F1adir\ el\ circuito\ pasado\ por\ par\u00E1metros\ a\ la\ LinkedList\ de\ Circuitos\r\n\r\n\ @param\ circuito,\ circuito\ que\ quiere\ a\u00F1adir\r\n
comment14.params=
comment14.target=java.lang.String\ CelebrarCompeticion()
comment14.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ realizar\ toda\ la\ ejecuci\u00F3n\ de\ la\ competici\u00F3n\r\n\r\n\ @return\ devuelve\ el\ string\ con\ toda\ la\ informaci\u00F3n\ de\ la\ competici\u00F3n\r\n
comment15.params=circuitoActual
comment15.target=java.lang.String\ CelebracionDeCarrera(Circuito)
comment15.text=\r\n\ Este\ m\u00E9todo\ es\ el\ encargado\ de\ realizar\ toda\ la\ ejecuci\u00F3n\ de\ la\ carrera\ de\ cada\ circuito\r\n\r\n\ @param\ circuitoActual,\ circuito\ donde\ se\ esta\ realizando\ la\ carrera\r\n\ @return\ devuelve\ el\ string\ con\ toda\ la\ informaci\u00F3n\ de\ la\ carrera\ que\ se\ ha\ realizado\r\n
comment2.params=
comment2.target=Organizacion\ getInstance()
comment2.text=\r\n\ M\u00E9todo\ est\u00E1tico\ para\ obtener\ la\ instancia\ Singleton\ de\ Organizaci\u00F3n\r\n\ \r\n\ @return\ organizaci\u00F3n\r\n
comment3.params=
comment3.target=java.lang.Boolean\ PilotosDisponibles()
comment3.text=\r\n\ M\u00E9todo\ que\ se\ encarga\ de\ comprobar\ si\ hay\ pilotos\ disponibles\ en\ cada\ escuderia\r\n\r\n\ @return\ false\ en\ caso\ de\ que\ no\ haya\ ning\u00FAn\ piloto\ disponible\ y\ true\ en\ caso\ de\ que\ si\ haya\ alg\u00FAn\ piloto\ disponible\r\n
comment4.params=organizacionCircuitos
comment4.target=void\ setOrganizacionCircuitos(ComparateOfCircuitos)
comment4.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ establecer\ el\ comparador\ de\ circuito\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ ordenacionCircuitos\r\n\r\n\ @param\ organizacionCircuitos,\ es\ el\ comparate\ de\ circuitos\ que\ se\ quiere\ utilizar\r\n
comment5.params=
comment5.target=void\ ordenarCircuitos()
comment5.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ ordenadar\ los\ circuitos\ utilizando\ el\ collections.sort\ y\ el\ tipo\ de\ ordenaci\u00F3n\ que\ es\r\n\ el\ del\ propio\ atributo\r\n
comment6.params=
comment6.target=java.lang.String\ mostrarCircuitosOrdenados()
comment6.text=\r\n\ Este\ m\u00E9todo\ es\ un\ mostrar\ de\ los\ circuitos\ ya\ ordenados\r\n\r\n\ @return\ devuelve\ el\ string\ con\ la\ cabecera\ de\ los\ circuitos\ de\ campeonato\ y\ los\ circuitos\ ordenados\r\n
comment7.params=
comment7.target=java.lang.String\ mostrarEscuderias()
comment7.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ mostrar\ las\ escuderias\r\n\r\n\ @return\ devuelve\ el\ string\ con\ la\ cabecera\ de\ las\ escuderias\ del\ campeonato\ y\ las\ escuderias\r\n
comment8.params=abandonos
comment8.target=void\ setLimiteAbandonos(int)
comment8.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ n\u00FAmero\ de\ abandonos\ que\ se\ ha\ pasado\ por\ par\u00E1metros\ al\ atributo\ LimiteAbandonos\r\n\r\n\ @param\ abandonos,\ n\u00FAmero\ de\ abandonos\ realizados\r\n
comment9.params=pilotos
comment9.target=void\ setLimitePilotos(int)
comment9.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ n\u00FAmero\ de\ pilotos\ que\ se\ ha\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ LimitePilotos\r\n\r\n\ @param\ pilotos,\ n\u00FAmero\ de\ pilotos\r\n
numComments=16
