#BlueJ class context
comment0.target=Circuito
comment1.params=nombre_ci\ complejidad\ distancia
comment1.target=Circuito(java.lang.String,\ Complejidad,\ Distancia)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ circuito,\ se\ encarga\ de\ inicializar\ los\ atributos\ de\ la\ clase\r\n
comment10.params=
comment10.target=java.lang.String\ ComplicacionExtra()
comment10.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ devolver\ la\ complicacion\ extra\ del\ circuito\ una\ vez\ se\ le\ han\ hecho\ todas\ las\ modificaciones\r\n\r\n\ @return\ la\ complicacion\ nueva\ del\ circuito\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ Este\ m\u00E9todo\ es\ el\ mostrar\ de\ la\ clase\ circuito\ que\ se\ encarga\ de\ mostrar\ por\ pantalla\ los\ atributos\ de\ la\ clase\ circuito\r\n\r\n\ @return\ s,\ devuelve\ el\ string\ que\ muestra\ toda\ la\ informacion\ del\ circuito\r\n
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ Devuelve\ el\ nombre\ del\ circuito\r\n\r\n\ @return\ nombre\r\n
comment3.params=nombre_c
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ nombre\ del\ circuto\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ nombre_ci\r\n\r\n\ @param\ nombre_c\ del\ circuito\ que\ queremos\ poner\ en\ el\ atributo\ nombre_ci\r\n
comment4.params=
comment4.target=Complejidad\ getComplejidad()
comment4.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ enum\ complejidad\ con\ su\ nombre(String)\ y\ valor(Double)\r\n\r\n\ @return\ enum\ de\ complejidad\r\n
comment5.params=complejidad
comment5.target=void\ setComplejidad(Complejidad)
comment5.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ la\ complejidad\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ complejidad\r\n\r\n\ @param\ complejidad,\ el\ enum\ de\ complejidad\ que\ ponemos\ en\ el\ atributo\ complejidad\r\n
comment6.params=
comment6.target=Distancia\ getDistancia()
comment6.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ enum\ de\ distancia\ con\ su\ nombre(String)\ y\ valor(Double)\r\n\r\n\ @return\ enum\ de\ distancia\r\n
comment7.params=distancia
comment7.target=void\ setDistancia(Distancia)
comment7.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ la\ distancia\ pasada\ por\ par\u00E1metros\ en\ al\ atributo\ distancia\r\n\r\n\ @param\ distancia,\ el\ enum\ de\ distancia\ que\ ponemos\ en\ el\ atributo\ distancia\r\n
comment8.params=
comment8.target=java.lang.Double\ getComplejidadActual()
comment8.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ valor\ de\ la\ complejidad\ actual\ que\ tiene\ el\ circuito\r\n\r\n\ @return\ valor\ de\ la\ complejidad\ actual\ del\ circuito\r\n
comment9.params=
comment9.target=java.lang.Double\ getDistanciaActual()
comment9.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ valor\ de\ la\ distancia\ actual\ que\ tiene\ el\ circuito\r\n\r\n\ @return\ valor\ de\ la\ distancia\ actual\ del\ circuito\r\n
numComments=12
