#BlueJ class context
comment0.target=Coche
comment1.params=nombre\ velocidad\ combustible
comment1.target=Coche(java.lang.String,\ Velocidad,\ Combustible)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Coche,\ se\ encarga\ de\ inicializar\ los\ atributos\ de\ la\ clase\r\n\r\n\ @param\ nombre,\ nombre\ del\ coche\r\n\ @param\ velocidad,\ velocidad\ del\ coche\r\n\ @param\ combustible,\ combustible\ del\ coche\r\n
comment10.params=
comment10.target=boolean\ getAsignado()
comment10.text=\r\n\ Este\ m\u00E9todo\ devuelve\ si\ el\ coche\ ha\ sido\ asignado\ a\ alg\u00FAn\ piloto\r\n\r\n\ @return\ asigando\r\n
comment11.params=asignado
comment11.target=void\ setAsignado(boolean)
comment11.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ true\ en\ caso\ de\ que\ el\ coche\ haya\ sido\ asignado\ o\ false\ en\ el\ que\ caso\ de\ que\r\n\ el\ coche\ no\ haya\ sido\ asignado\ en\ el\ atributo\ asignado\r\n\r\n\ @param\ asignado,\ boolean\ true\ o\ false\r\n
comment12.params=destreza\ distancia\ complejidad
comment12.target=java.lang.Double\ comprobarTiempoNecesarioTerminar(java.lang.Double,\ java.lang.Double,\ java.lang.Double)
comment12.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ comprobar\ el\ tiempo\ necesario\ que\ se\ necesita\ para\ terminar\ la\ carrera\ y\ depende\ de\ la\r\n\ destreza\ del\ piloto,\ la\ distancia\ y\ la\ complejidad\ del\ circuito.\r\n\r\n\ @param\ destreza,\ destreza\ del\ piloto\r\n\ @param\ distancia,\ distancia\ del\ circuito\r\n\ @param\ complejidad,\ complejidad\ del\ circuito\r\n\ @return\ tiempo\ necesario\ para\ terminar\ la\ carrera\r\n
comment13.params=destreza\ complejidad\ distancia
comment13.target=java.lang.String\ salidaCocheConExtras(java.lang.Double,\ java.lang.Double,\ java.lang.Double)
comment13.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ calcular\ el\ nitro\ que\ necesita,\ la\ velocidad\ que\ es\ capaz\ de\ alcanzar\ usando\ el\ nitro\ del\ coche\r\n\ y\ el\ nitro\ que\ le\ quedar\u00E1\ al\ coche\ si\ es\ cocheRapido\ y\ en\ caso\ de\ que\ sea\ cocheResistente\r\n\r\n\ @param\ destreza,\ destreza\ del\ piloto\r\n\ @param\ complejidad,\ complejidad\ del\ circuito\r\n\ @param\ distancia,\ distancia\ del\ circuito\r\n\ @return\ devuelve\ el\ String\ s\ con\ toda\ la\ informaci\u00F3n\ del\ coche\r\n
comment14.params=
comment14.target=java.lang.String\ GasolinaRestante()
comment14.text=\r\n\ Este\ m\u00E9todo\ es\ un\ m\u00E9todo\ mostrar\ de\ la\ clase\ coche\ que\ muestra\ por\ pantalla\ el\ combustible\ que\ le\ queda\ al\ coche\r\n\ despu\u00E9s\ de\ realizar\ "x"\ carrera\r\n\r\n\ @return\ devuelve\ un\ string\ con\ la\ informaci\u00F3n\ del\ combustible\ que\ le\ queda\ al\ coche\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ Este\ m\u00E9todo\ muestra\ saca\ por\ pantalla\ la\ informaci\u00F3n\ de\ los\ coches(abstract\ mehod)\r\n\r\n\ @return\ devuelve\ un\ string\ con\ la\ informaci\u00F3n\ de\ los\ coches\r\n
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ nombre\ del\ coche\r\n\r\n\ @return\ nombre\r\n
comment3.params=nombre_co
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ nombre\ del\ coche\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ nombre\r\n\r\n\ @param\ nombre_co,\ nombre\ del\ coche\ que\ queremos\ poner\ en\ el\ atributo\ nombre\r\n
comment4.params=
comment4.target=Velocidad\ getVelocidad()
comment4.text=\r\n\ Este\ m\u00E9todo\ devuelve\ la\ velocidad\ del\ coche\r\n\r\n\ @return\ velocidad\r\n
comment5.params=velocidad
comment5.target=void\ setVelocidad(Velocidad)
comment5.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ la\ velocidad\ del\ coche\ pasada\ por\ par\u00E1metros\ en\ el\ atributo\ velocidad\r\n\r\n\ @param\ velocidad,\ velocidad\ del\ coche\ que\ queremos\ poner\ en\ el\ atributo\ velocidad\r\n
comment6.params=
comment6.target=Combustible\ getCombustibleInicial()
comment6.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ combustible\ inicial\ del\ coche\r\n\r\n\ @return\ combustible\r\n
comment7.params=combustible
comment7.target=void\ setCombustibleInicial(Combustible)
comment7.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ combustible\ inicial\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ combustible\r\n\r\n\ @param\ combustible,\ combustible\ del\ coche\ que\ queremos\ poner\ en\ el\ atributo\ combustible\r\n
comment8.params=
comment8.target=java.lang.Double\ getCombustible()
comment8.text=\r\n\ Este\ m\u00E9todo\ devuelve\ el\ combustible\ actual\ del\ coche\r\n\r\n\ @return\ combustible_actual\r\n
comment9.params=combustible
comment9.target=void\ setCombustible(java.lang.Double)
comment9.text=\r\n\ Este\ m\u00E9todo\ se\ encarga\ de\ poner\ el\ combustible\ actual\ pasado\ por\ par\u00E1metros\ en\ el\ atributo\ combustible_actual\r\n\r\n\ @param\ combustible,\ combustible\ acual\ del\ coche\ que\ qeremos\ poner\ en\ el\ atributo\ combustible_acutal\r\n
numComments=16
